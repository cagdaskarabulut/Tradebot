# Generated by Django 3.0.6 on 2022-10-19 07:38

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('binance', '0098_tradelog_passedhourstosell'),
    ]

    operations = [
        migrations.AddField(
            model_name='preferences',
            name='cooldownAsHoursForNewBuyFromSameCoinBaseForMarginBTC',
            field=models.IntegerField(default=6, help_text='MarginBTC yeni alım yapmak için minimum x kadar saat geçmeli', verbose_name='MarginBTC için taban cooldown saat sayisi'),
        ),
        migrations.AddField(
            model_name='preferences',
            name='isMarginBTCRobotActive',
            field=models.BooleanField(default=False, help_text='Btc ye bakıp long short açan robot çalışıyor mu?', verbose_name='MarginBTC robotu açık mı?'),
        ),
        migrations.AddField(
            model_name='preferences',
            name='isMarginBTCRobotLongActive',
            field=models.BooleanField(default=True, help_text='MarginBTC Robot açık olduğunda bu seçenekte açık ise Ema üzerindeyken long açan marginli robot çalışıyor mu?', verbose_name='MarginBTC robotu long alım açık mı?'),
        ),
        migrations.AddField(
            model_name='preferences',
            name='lastMarginBTCRobotWorkingDate',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Son marginBTC robotun çalışma tarihi'),
        ),
        migrations.AddField(
            model_name='preferences',
            name='lossLimitForRobotMarginBTC',
            field=models.FloatField(default=-100, help_text='MarginBTC robotun bu zarar altına geldiğinde komple çalışmayacak. İstenirse sonradan arttırılabilir.', verbose_name='MarginBTC robot Margin zarar limiti'),
        ),
        migrations.AddField(
            model_name='preferences',
            name='marginBTCResultHistoryAsUsdt',
            field=models.FloatField(default=0, help_text='MarginBTC geçmişten bu yana alım satımlardan yapılan kar zarar durumu', verbose_name='MarginBTC geçmişten bu yana alım satımlardan yapılan kar zarar durumu'),
        ),
        migrations.AddField(
            model_name='preferences',
            name='marginBTCRobotNegativeSellCount',
            field=models.IntegerField(default=0, verbose_name='MarginBTC robot zararına satış sayısı'),
        ),
        migrations.AddField(
            model_name='preferences',
            name='marginBTCRobotPositiveSellCount',
            field=models.IntegerField(default=0, verbose_name='MarginBTC robot karlı satış sayısı'),
        ),
        migrations.AddField(
            model_name='preferences',
            name='marginBTCRobotTotalBuyCount',
            field=models.IntegerField(default=0, verbose_name='MarginBTC robot toplam alış sayısı'),
        ),
        migrations.AddField(
            model_name='preferences',
            name='maxLimitForMarginBTCAsUsdt',
            field=models.FloatField(default=100, help_text='MarginBTC robotun kullanacağı maksimum usdt tutarı', verbose_name='Margin Bütçe'),
        ),
        migrations.AddField(
            model_name='preferences',
            name='maxOpenTradeCountForMarginBTC',
            field=models.IntegerField(default=2, help_text='MarginBTC Long işlem için aynı coin adet limiti', verbose_name='MarginBTC Long işlem için aynı coin adet limiti'),
        ),
        migrations.AddField(
            model_name='preferences',
            name='stopBuyingDateForMarginBTC',
            field=models.DateTimeField(blank=True, help_text='MarginBTC 1 tane zararına satış yapıldığı zaman bu tarih alanını doldur ve 6 saat boyunca başka alım yapma. 6 saat sonra bu alanı boşaltıp tekrar alımlara devam et.', null=True, verbose_name='Margin alış durduruşunun başlama tarihi (Değiştirilmez)'),
        ),
        migrations.AddField(
            model_name='preferences',
            name='stopBuyingWaitingTimeMarginBTC',
            field=models.IntegerField(default=6, verbose_name='MarginBRC robotunda alış dondurulduktan sonra tekrar alıma geçmesi için beklemesi gereken saat sayısı'),
        ),
        migrations.AddField(
            model_name='preferences',
            name='stopLossTriggerStartPercentageMarginBTC',
            field=models.FloatField(default=2.5, help_text='Örneğin %4 kar ettikten sonra tetiklenir', verbose_name='MarginBTC StopLoss başlama yüzdesi'),
        ),
        migrations.AddField(
            model_name='preferences',
            name='stopLossTriggerStopPercentageMarginBTC',
            field=models.FloatField(default=0.5, help_text='Örneğin tetiklendikten sonra %1 kaybettiğinde çalışır', verbose_name='MarginBTC StopLoss kaybı durdurma yüzdesi'),
        ),
        migrations.AddField(
            model_name='preferences',
            name='stopPercentageForSellingForMarginBTC',
            field=models.IntegerField(default=-3, verbose_name='Margin_RSI_15m Long ve Short için zarar kes(stop) yapılacak yüzdelik oran'),
        ),
        migrations.AddField(
            model_name='preferences',
            name='targetPercentageForLongSellingForMarginBTC',
            field=models.IntegerField(default=2, verbose_name='MarginBTC Long için Satış yapmak için beklenen min fark'),
        ),
        migrations.AddField(
            model_name='preferences',
            name='temp_startForMarginBTCAsUsdt',
            field=models.FloatField(default=500, verbose_name='Robot Margin başlangıç bütçesi (Değiştirilmez)'),
        ),
        migrations.AlterField(
            model_name='preferences',
            name='maxRSIForLong',
            field=models.IntegerField(default=60, help_text='Margin_RSI_15m ve RSI_15m Long için Max RSI (Varsayılan değeri 65)', verbose_name='Margin_RSI_15m ve RSI_15m Long Max RSI'),
        ),
    ]
